Data I/O streams
Okay the DataOutputStream class has method invocation that looks like this

out.writeInt(XXX) 4 bytes
out.writeUTF(XXX) n bytes
out.writeDouble(XXX) 8 bytes

For UTF it looks like this as the structure

struct UTFDecoding {
	u16_be length;
	char *data;
};

Exception in thread "main" java.io.UTFDataFormatException: encoded string (Java T-s...00000000) too long: 65548 bytes
        at java.base/java.io.DataOutputStream.writeUTF(Unknown Source)
        at java.base/java.io.DataOutputStream.writeUTF(Unknown Source)
        at Program.main(Program.java:25)

Object I/O Streams

https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/protocol.html

final static short STREAM_MAGIC = (short)0xaced;
final static short STREAM_VERSION = 5;
final static byte TC_NULL = (byte)0x70;
final static byte TC_REFERENCE = (byte)0x71;
final static byte TC_CLASSDESC = (byte)0x72;
final static byte TC_OBJECT = (byte)0x73;
final static byte TC_STRING = (byte)0x74;
final static byte TC_ARRAY = (byte)0x75;
final static byte TC_CLASS = (byte)0x76;
final static byte TC_BLOCKDATA = (byte)0x77;
final static byte TC_ENDBLOCKDATA = (byte)0x78;
final static byte TC_RESET = (byte)0x79;
final static byte TC_BLOCKDATALONG = (byte)0x7A;
final static byte TC_EXCEPTION = (byte)0x7B;
final static byte TC_LONGSTRING = (byte) 0x7C;
final static byte TC_PROXYCLASSDESC = (byte) 0x7D;
final static byte TC_ENUM = (byte) 0x7E;
final static  int   baseWireHandle = 0x7E0000;

final static byte SC_WRITE_METHOD = 0x01; //if SC_SERIALIZABLE
final static byte SC_BLOCK_DATA = 0x08;    //if SC_EXTERNALIZABLE
final static byte SC_SERIALIZABLE = 0x02;
final static byte SC_EXTERNALIZABLE = 0x04;
final static byte SC_ENUM = 0x10;